{"ast":null,"code":"import _defineProperty from \"D:\\\\projects\\\\react\\\\tasks\\\\pizza\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\projects\\\\react\\\\tasks\\\\pizza\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"D:\\\\projects\\\\react\\\\tasks\\\\pizza\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"D:\\\\projects\\\\react\\\\tasks\\\\pizza\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\projects\\\\react\\\\tasks\\\\pizza\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { ADD_PIZZA, DELETE_PIZZA, EDIT_PIZZA, CHANGE_FILTER, ON_INIT_FUNCTION } from \"./action-types/cart-actions\"; //add cart action\n\nexport var initFunction = function initFunction() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch({\n                  type: ON_INIT_FUNCTION\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var changeFilter = function changeFilter(value, selectedValue) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n        var state, filteredProducts;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                state = getState();\n                filteredProducts = [];\n\n                if (value.length > 0 || selectedValue.length > 0) {\n                  filteredProducts = state.items.filter(function (each) {\n                    if (selectedValue !== \"select_Department\") {\n                      return each.title.includes(value) && each.type.includes(selectedValue);\n                    } else {\n                      return each.title.includes(value);\n                    }\n                  });\n                } else {\n                  filteredProducts = state.items;\n                }\n\n                dispatch({\n                  type: CHANGE_FILTER,\n                  filteredProducts: filteredProducts\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n}; /////////////delete item (pizza)///////\n\nexport var deletePizza = function deletePizza(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch, getState) {\n        var state, new_items;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                state = getState();\n                console.log(id, \"iddd\");\n                new_items = state.items.filter(function (item) {\n                  return id !== item.id;\n                });\n                console.log(new_items, \"new items\");\n                dispatch({\n                  type: DELETE_PIZZA,\n                  items: new_items\n                });\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x5, _x6) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n}; ////// edit pizza /////\n\nexport var editPizza = function editPizza(formValues) {\n  console.log(formValues, \"we are here in edit\");\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch, getState) {\n        var state, index, items;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                state = getState();\n                index = state.items.findIndex(function (item) {\n                  return item.id == formValues.id;\n                });\n                items = _toConsumableArray(state.items); // important to create a copy, otherwise you'll modify state outside of setState call\n\n                items[index] = _objectSpread({}, items[index], {\n                  title: formValues.name,\n                  price: formValues.price,\n                  type: formValues.type,\n                  img: formValues.img,\n                  desc: formValues.desc\n                });\n                dispatch({\n                  type: EDIT_PIZZA,\n                  items: items\n                });\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function (_x7, _x8) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n}; ////// ADD Pizza /////\n\nexport var addPizza = function addPizza(formValues) {\n  console.log(formValues, \"formValues\");\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch, getState) {\n        var state, updatedItems, addedItem;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                state = getState();\n                updatedItems = state.items;\n                addedItem = [_defineProperty({\n                  id: Math.floor(Math.random() * (999 - 100 + 1) + 100),\n                  activeDiscount: \"\",\n                  discount: 5,\n                  title: formValues[\"name\"],\n                  desc: formValues[\"desc\"],\n                  price: formValues[\"price\"],\n                  img: formValues[\"img\"],\n                  type: formValues[\"type\"]\n                }, \"desc\", formValues[\"desc\"])]; //check if the action id exists in the addedItems\n                // updatedItems = state.items.concat(addedItem);\n\n                updatedItems = addedItem.concat(state.items);\n                console.log(updatedItems, \"updateditems\");\n                dispatch({\n                  type: ADD_PIZZA,\n                  items: updatedItems\n                });\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function (_x9, _x10) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["D:\\projects\\react\\tasks\\pizza\\src\\components\\actions\\cartActions.js"],"names":["ADD_PIZZA","DELETE_PIZZA","EDIT_PIZZA","CHANGE_FILTER","ON_INIT_FUNCTION","initFunction","dispatch","getState","type","changeFilter","value","selectedValue","state","filteredProducts","length","items","filter","each","title","includes","deletePizza","id","console","log","new_items","item","editPizza","formValues","index","findIndex","name","price","img","desc","addPizza","updatedItems","addedItem","Math","floor","random","activeDiscount","discount","concat"],"mappings":"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","sourcesContent":["import {\r\n  ADD_PIZZA,\r\n  DELETE_PIZZA,\r\n  EDIT_PIZZA,\r\n  CHANGE_FILTER,\r\n  ON_INIT_FUNCTION,\r\n} from \"./action-types/cart-actions\";\r\n\r\n//add cart action\r\nexport const initFunction = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({\r\n      type: ON_INIT_FUNCTION,\r\n    });\r\n  };\r\n};\r\nexport const changeFilter = (value, selectedValue) => {\r\n  return async (dispatch, getState) => {\r\n    const state = getState();\r\n    let filteredProducts = [];\r\n\r\n    if (value.length > 0 || selectedValue.length > 0) {\r\n      filteredProducts = state.items.filter((each) => {\r\n        if (selectedValue !== \"select_Department\") {\r\n          return (\r\n            each.title.includes(value) && each.type.includes(selectedValue)\r\n          );\r\n        } else {\r\n          return each.title.includes(value);\r\n        }\r\n      });\r\n    } else {\r\n      filteredProducts = state.items;\r\n    }\r\n\r\n    dispatch({\r\n      type: CHANGE_FILTER,\r\n      filteredProducts,\r\n    });\r\n  };\r\n};\r\n/////////////delete item (pizza)///////\r\nexport const deletePizza = (id) => {\r\n  return async (dispatch, getState) => {\r\n    const state = getState();\r\n    console.log(id, \"iddd\");\r\n    let new_items = state.items.filter((item) => id !== item.id);\r\n    console.log(new_items, \"new items\");\r\n    dispatch({\r\n      type: DELETE_PIZZA,\r\n      items: new_items,\r\n    });\r\n  };\r\n};\r\n////// edit pizza /////\r\n\r\nexport const editPizza = (formValues) => {\r\n  console.log(formValues, \"we are here in edit\");\r\n\r\n  return async (dispatch, getState) => {\r\n    const state = getState();\r\n\r\n    const index = state.items.findIndex((item) => item.id == formValues.id);\r\n    let items = [...state.items]; // important to create a copy, otherwise you'll modify state outside of setState call\r\n    items[index] = {\r\n      ...items[index],\r\n      title: formValues.name,\r\n      price: formValues.price,\r\n      type: formValues.type,\r\n      img: formValues.img,\r\n      desc: formValues.desc,\r\n    };\r\n    dispatch({\r\n      type: EDIT_PIZZA,\r\n      items: items,\r\n    });\r\n  };\r\n};\r\n////// ADD Pizza /////\r\nexport const addPizza = (formValues) => {\r\n  console.log(formValues, \"formValues\");\r\n  return async (dispatch, getState) => {\r\n    const state = getState();\r\n    let updatedItems = state.items;\r\n    let addedItem = [\r\n      {\r\n        id: Math.floor(Math.random() * (999 - 100 + 1) + 100),\r\n        activeDiscount: \"\",\r\n        discount: 5,\r\n        title: formValues[\"name\"],\r\n        desc: formValues[\"desc\"],\r\n        price: formValues[\"price\"],\r\n        img: formValues[\"img\"],\r\n        type: formValues[\"type\"],\r\n        desc: formValues[\"desc\"],\r\n      },\r\n    ];\r\n    //check if the action id exists in the addedItems\r\n    // updatedItems = state.items.concat(addedItem);\r\n    updatedItems = addedItem.concat(state.items);\r\n    console.log(updatedItems, \"updateditems\");\r\n    dispatch({\r\n      type: ADD_PIZZA,\r\n      items: updatedItems,\r\n    });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}