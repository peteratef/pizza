{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\projects\\\\react\\\\React-Shopping-Cart\\\\Shopping-Cart\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\projects\\\\react\\\\React-Shopping-Cart\\\\Shopping-Cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY, ADD_QUANTITY, ADD_SHIPPING, CHANGE_FILTER, ON_INIT_FUNCTION } from \"./action-types/cart-actions\"; //add cart action\n\nexport var initFunction = function initFunction() {\n  return {\n    type: ON_INIT_FUNCTION\n  };\n};\nexport var changeFilter = function changeFilter(value, selectedValue) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch({\n                  type: CHANGE_FILTER\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var addToCart = function addToCart(id) {\n  return {\n    type: ADD_TO_CART,\n    id: id\n  };\n}; //remove item action\n\nexport var removeItem = function removeItem(id) {\n  return {\n    type: REMOVE_ITEM,\n    id: id\n  };\n}; //subtract qt action\n\nexport var subtractQuantity = function subtractQuantity(id) {\n  return {\n    type: SUB_QUANTITY,\n    id: id\n  };\n}; //add qt action\n\nexport var addQuantity = function addQuantity(id) {\n  return {\n    type: ADD_QUANTITY,\n    id: id\n  };\n};","map":{"version":3,"sources":["D:\\projects\\react\\React-Shopping-Cart\\Shopping-Cart\\src\\components\\actions\\cartActions.js"],"names":["ADD_TO_CART","REMOVE_ITEM","SUB_QUANTITY","ADD_QUANTITY","ADD_SHIPPING","CHANGE_FILTER","ON_INIT_FUNCTION","initFunction","type","changeFilter","value","selectedValue","dispatch","getState","addToCart","id","removeItem","subtractQuantity","addQuantity"],"mappings":";;AAAA,SACEA,WADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,YAJF,EAKEC,YALF,EAMEC,aANF,EAOEC,gBAPF,QAQO,6BARP,C,CAUA;;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAEF;AADD,GAAP;AAGD,CAJM;AAKP,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQC,aAAR,EAA0B;AACpD;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AACLD,gBAAAA,QAAQ,CAAC;AACPJ,kBAAAA,IAAI,EAAEH;AADC,iBAAD,CAAR;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAKD,CANM;AAOP,OAAO,IAAMS,SAAS,GAAG,SAAZA,SAAY,CAACC,EAAD,EAAQ;AAC/B,SAAO;AACLP,IAAAA,IAAI,EAAER,WADD;AAELe,IAAAA,EAAE,EAAFA;AAFK,GAAP;AAID,CALM,C,CAMP;;AACA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACD,EAAD,EAAQ;AAChC,SAAO;AACLP,IAAAA,IAAI,EAAEP,WADD;AAELc,IAAAA,EAAE,EAAFA;AAFK,GAAP;AAID,CALM,C,CAMP;;AACA,OAAO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACF,EAAD,EAAQ;AACtC,SAAO;AACLP,IAAAA,IAAI,EAAEN,YADD;AAELa,IAAAA,EAAE,EAAFA;AAFK,GAAP;AAID,CALM,C,CAMP;;AACA,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACH,EAAD,EAAQ;AACjC,SAAO;AACLP,IAAAA,IAAI,EAAEL,YADD;AAELY,IAAAA,EAAE,EAAFA;AAFK,GAAP;AAID,CALM","sourcesContent":["import {\r\n  ADD_TO_CART,\r\n  REMOVE_ITEM,\r\n  SUB_QUANTITY,\r\n  ADD_QUANTITY,\r\n  ADD_SHIPPING,\r\n  CHANGE_FILTER,\r\n  ON_INIT_FUNCTION,\r\n} from \"./action-types/cart-actions\";\r\n\r\n//add cart action\r\nexport const initFunction = () => {\r\n  return {\r\n    type: ON_INIT_FUNCTION,\r\n  };\r\n};\r\nexport const changeFilter = (value, selectedValue) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({\r\n      type: CHANGE_FILTER,\r\n    });\r\n  };\r\n};\r\nexport const addToCart = (id) => {\r\n  return {\r\n    type: ADD_TO_CART,\r\n    id,\r\n  };\r\n};\r\n//remove item action\r\nexport const removeItem = (id) => {\r\n  return {\r\n    type: REMOVE_ITEM,\r\n    id,\r\n  };\r\n};\r\n//subtract qt action\r\nexport const subtractQuantity = (id) => {\r\n  return {\r\n    type: SUB_QUANTITY,\r\n    id,\r\n  };\r\n};\r\n//add qt action\r\nexport const addQuantity = (id) => {\r\n  return {\r\n    type: ADD_QUANTITY,\r\n    id,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}