{"ast":null,"code":"import _toConsumableArray from \"D:\\\\projects\\\\react\\\\React-Shopping-Cart\\\\Shopping-Cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"D:\\\\projects\\\\react\\\\React-Shopping-Cart\\\\Shopping-Cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"D:\\\\projects\\\\react\\\\React-Shopping-Cart\\\\Shopping-Cart\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\projects\\\\react\\\\React-Shopping-Cart\\\\Shopping-Cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY, ADD_QUANTITY, ADD_SHIPPING, CHANGE_FILTER, ON_INIT_FUNCTION } from \"./action-types/cart-actions\"; //add cart action\n\nexport var initFunction = function initFunction() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch({\n                  type: ON_INIT_FUNCTION\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var changeFilter = function changeFilter(value, selectedValue) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n        var state, filteredProducts;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                state = getState();\n                filteredProducts = [];\n\n                if (value.length > 0 || selectedValue.length > 0) {\n                  filteredProducts = state.items.filter(function (each) {\n                    if (selectedValue !== \"select_Department\") {\n                      return each.title.includes(value) && each.dep.includes(selectedValue);\n                    } else {\n                      return each.title.includes(value);\n                    }\n                  });\n                } else {\n                  filteredProducts = state.items;\n                }\n\n                dispatch({\n                  type: CHANGE_FILTER,\n                  filteredProducts: filteredProducts\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var addToCart = function addToCart(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch, getState) {\n        var state, addedItem, existed_item, priceAfterDiscount, newTotal;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                state = getState();\n                console.log(state, \"state\");\n                addedItem = state.items.find(function (item) {\n                  return item.id === id;\n                }); //check if the action id exists in the addedItems\n\n                existed_item = state.addedItems.find(function (item) {\n                  return id === item.id;\n                });\n                priceAfterDiscount = addedItem.price;\n\n                if (addedItem.activeDiscount) {\n                  priceAfterDiscount = addedItem.price - addedItem.price * addedItem.discount / 100;\n                }\n\n                if (existed_item) {\n                  console.log(\"existed item\");\n                  addedItem.quantity += 1;\n                  dispatch(_objectSpread({\n                    type: ADD_TO_CART\n                  }, state, {\n                    total: state.total + priceAfterDiscount\n                  }));\n                } else {\n                  addedItem.quantity = 1;\n                  newTotal = state.total + priceAfterDiscount;\n                  dispatch({\n                    type: ADD_TO_CART,\n                    addedItems: _toConsumableArray(state.addedItems).concat([addedItem]),\n                    total: newTotal\n                  });\n                }\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x5, _x6) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n}; //remove item action\n\nexport var removeItem = function removeItem(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch, getState) {\n        var state, itemToRemove, new_items, priceAfterDiscount, newTotal;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                state = getState();\n                itemToRemove = state.addedItems.find(function (item) {\n                  return id === item.id;\n                });\n                new_items = state.addedItems.filter(function (item) {\n                  return id !== item.id;\n                });\n                priceAfterDiscount = itemToRemove.price;\n\n                if (itemToRemove.activeDiscount) {\n                  priceAfterDiscount = itemToRemove.price - itemToRemove.price * itemToRemove.discount / 100;\n                } //calculating the total\n\n\n                newTotal = state.total - priceAfterDiscount * itemToRemove.quantity;\n                dispatch({\n                  type: REMOVE_ITEM,\n                  addedItems: new_items,\n                  total: newTotal\n                });\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function (_x7, _x8) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n}; //subtract qt action\n\nexport var subtractQuantity = function subtractQuantity(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch, getState) {\n        var state, addedItem, priceAfterDiscount, new_items, newTotal, _newTotal;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                state = getState();\n                addedItem = state.items.find(function (item) {\n                  return item.id === id;\n                }); //if the qt == 0 then it should be removed\n\n                priceAfterDiscount = addedItem.price;\n\n                if (addedItem.activeDiscount) {\n                  priceAfterDiscount = addedItem.price - addedItem.price * addedItem.discount / 100;\n                }\n\n                if (addedItem.quantity === 1) {\n                  new_items = state.addedItems.filter(function (item) {\n                    return item.id !== id;\n                  });\n                  newTotal = state.total - priceAfterDiscount;\n                  dispatch(_objectSpread({\n                    type: SUB_QUANTITY\n                  }, state, {\n                    addedItems: new_items,\n                    addedtotal: newTotal\n                  }));\n                } else {\n                  addedItem.quantity -= 1;\n                  _newTotal = state.total - priceAfterDiscount;\n                  console.log(_newTotal, \"newTotal\");\n                  dispatch(_objectSpread({\n                    type: SUB_QUANTITY\n                  }, state, {\n                    addedItems: state.addedItems,\n                    addedtotal: _newTotal\n                  }));\n                }\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function (_x9, _x10) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n}; //add qt action\n\nexport var addQuantity = function addQuantity(id) {\n  return {\n    type: ADD_QUANTITY,\n    id: id\n  };\n};","map":{"version":3,"sources":["D:\\projects\\react\\React-Shopping-Cart\\Shopping-Cart\\src\\components\\actions\\cartActions.js"],"names":["ADD_TO_CART","REMOVE_ITEM","SUB_QUANTITY","ADD_QUANTITY","ADD_SHIPPING","CHANGE_FILTER","ON_INIT_FUNCTION","initFunction","dispatch","getState","type","changeFilter","value","selectedValue","state","filteredProducts","length","items","filter","each","title","includes","dep","addToCart","id","console","log","addedItem","find","item","existed_item","addedItems","priceAfterDiscount","price","activeDiscount","discount","quantity","total","newTotal","removeItem","itemToRemove","new_items","subtractQuantity","addedtotal","addQuantity"],"mappings":"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","sourcesContent":["import {\r\n  ADD_TO_CART,\r\n  REMOVE_ITEM,\r\n  SUB_QUANTITY,\r\n  ADD_QUANTITY,\r\n  ADD_SHIPPING,\r\n  CHANGE_FILTER,\r\n  ON_INIT_FUNCTION,\r\n} from \"./action-types/cart-actions\";\r\n\r\n//add cart action\r\nexport const initFunction = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({\r\n      type: ON_INIT_FUNCTION,\r\n    });\r\n  };\r\n};\r\nexport const changeFilter = (value, selectedValue) => {\r\n  return async (dispatch, getState) => {\r\n    const state = getState();\r\n    let filteredProducts = [];\r\n\r\n    if (value.length > 0 || selectedValue.length > 0) {\r\n      filteredProducts = state.items.filter((each) => {\r\n        if (selectedValue !== \"select_Department\") {\r\n          return each.title.includes(value) && each.dep.includes(selectedValue);\r\n        } else {\r\n          return each.title.includes(value);\r\n        }\r\n      });\r\n    } else {\r\n      filteredProducts = state.items;\r\n    }\r\n\r\n    dispatch({\r\n      type: CHANGE_FILTER,\r\n      filteredProducts,\r\n    });\r\n  };\r\n};\r\nexport const addToCart = (id) => {\r\n  return async (dispatch, getState) => {\r\n    const state = getState();\r\n    console.log(state, \"state\");\r\n\r\n    let addedItem = state.items.find((item) => item.id === id);\r\n    //check if the action id exists in the addedItems\r\n    let existed_item = state.addedItems.find((item) => id === item.id);\r\n    let priceAfterDiscount = addedItem.price;\r\n    if (addedItem.activeDiscount) {\r\n      priceAfterDiscount =\r\n        addedItem.price - (addedItem.price * addedItem.discount) / 100;\r\n    }\r\n    if (existed_item) {\r\n      console.log(\"existed item\");\r\n      addedItem.quantity += 1;\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        ...state,\r\n        total: state.total + priceAfterDiscount,\r\n      });\r\n    } else {\r\n      addedItem.quantity = 1;\r\n      let newTotal = state.total + priceAfterDiscount;\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        addedItems: [...state.addedItems, addedItem],\r\n        total: newTotal,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n//remove item action\r\nexport const removeItem = (id) => {\r\n  return async (dispatch, getState) => {\r\n    const state = getState();\r\n    let itemToRemove = state.addedItems.find((item) => id === item.id);\r\n    let new_items = state.addedItems.filter((item) => id !== item.id);\r\n    let priceAfterDiscount = itemToRemove.price;\r\n    if (itemToRemove.activeDiscount) {\r\n      priceAfterDiscount =\r\n        itemToRemove.price - (itemToRemove.price * itemToRemove.discount) / 100;\r\n    }\r\n    //calculating the total\r\n    let newTotal = state.total - priceAfterDiscount * itemToRemove.quantity;\r\n\r\n    dispatch({\r\n      type: REMOVE_ITEM,\r\n      addedItems: new_items,\r\n      total: newTotal,\r\n    });\r\n  };\r\n};\r\n//subtract qt action\r\nexport const subtractQuantity = (id) => {\r\n  return async (dispatch, getState) => {\r\n    const state = getState();\r\n    let addedItem = state.items.find((item) => item.id === id);\r\n    //if the qt == 0 then it should be removed\r\n    let priceAfterDiscount = addedItem.price;\r\n    if (addedItem.activeDiscount) {\r\n      priceAfterDiscount =\r\n        addedItem.price - (addedItem.price * addedItem.discount) / 100;\r\n    }\r\n    if (addedItem.quantity === 1) {\r\n      let new_items = state.addedItems.filter((item) => item.id !== id);\r\n\r\n      let newTotal = state.total - priceAfterDiscount;\r\n      dispatch({\r\n        type: SUB_QUANTITY,\r\n        ...state,\r\n        addedItems: new_items,\r\n        addedtotal: newTotal,\r\n      });\r\n    } else {\r\n      addedItem.quantity -= 1;\r\n      let newTotal = state.total - priceAfterDiscount;\r\n      console.log(newTotal, \"newTotal\");\r\n      dispatch({\r\n        type: SUB_QUANTITY,\r\n        ...state,\r\n        addedItems: state.addedItems,\r\n        addedtotal: newTotal,\r\n      });\r\n    }\r\n  };\r\n};\r\n//add qt action\r\nexport const addQuantity = (id) => {\r\n  return {\r\n    type: ADD_QUANTITY,\r\n    id,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}