{"ast":null,"code":"import _objectSpread from \"D:\\\\projects\\\\react\\\\tasks\\\\pizza\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"D:\\\\projects\\\\react\\\\tasks\\\\pizza\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"D:\\\\projects\\\\react\\\\tasks\\\\pizza\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\projects\\\\react\\\\tasks\\\\pizza\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { ADD_PIZZA, DELETE_PIZZA, EDIT_PIZZA, ADD_QUANTITY, CHANGE_FILTER, ON_INIT_FUNCTION } from \"./action-types/cart-actions\"; //add cart action\n\nexport var initFunction = function initFunction() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch({\n                  type: ON_INIT_FUNCTION\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var changeFilter = function changeFilter(value, selectedValue) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n        var state, filteredProducts;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                state = getState();\n                filteredProducts = [];\n\n                if (value.length > 0 || selectedValue.length > 0) {\n                  filteredProducts = state.items.filter(function (each) {\n                    if (selectedValue !== \"select_Department\") {\n                      return each.title.includes(value) && each.dep.includes(selectedValue);\n                    } else {\n                      return each.title.includes(value);\n                    }\n                  });\n                } else {\n                  filteredProducts = state.items;\n                }\n\n                dispatch({\n                  type: CHANGE_FILTER,\n                  filteredProducts: filteredProducts\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var removeItem = function removeItem(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch, getState) {\n        var state, itemToRemove, new_items, priceAfterDiscount, newTotal;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                state = getState();\n                itemToRemove = state.addedItems.find(function (item) {\n                  return id === item.id;\n                });\n                new_items = state.addedItems.filter(function (item) {\n                  return id !== item.id;\n                });\n                priceAfterDiscount = itemToRemove.price;\n\n                if (itemToRemove.activeDiscount) {\n                  priceAfterDiscount = itemToRemove.price - itemToRemove.price * itemToRemove.discount / 100;\n                } //calculating the total\n\n\n                newTotal = state.total - priceAfterDiscount * itemToRemove.quantity;\n                dispatch({\n                  type: REMOVE_ITEM,\n                  addedItems: new_items,\n                  total: newTotal\n                });\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x5, _x6) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n}; /////////////delete item (pizza)///////\n\nexport var deletePizza = function deletePizza(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch, getState) {\n        var state, new_items;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                state = getState();\n                console.log(id, \"iddd\");\n                new_items = state.items.filter(function (item) {\n                  return id !== item.id;\n                });\n                console.log(new_items, \"new items\");\n                dispatch({\n                  type: DELETE_PIZZA,\n                  items: new_items\n                });\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function (_x7, _x8) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n}; ////// edit pizza /////\n\nexport var editPizza = function editPizza(formValues) {\n  console.log(formValues, \"we are here in edit\");\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch, getState) {\n        var state, index, items;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                state = getState();\n                index = state.items.findIndex(function (item) {\n                  return item.id == formValues.id;\n                });\n                items = _toConsumableArray(state.items); // important to create a copy, otherwise you'll modify state outside of setState call\n\n                items[index] = _objectSpread({}, items[index], {\n                  title: formValues.name,\n                  price: formValues.price,\n                  dep: formValues.type,\n                  img: formValues.img\n                });\n                dispatch({\n                  type: EDIT_PIZZA,\n                  items: items\n                });\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function (_x9, _x10) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n}; ////// ADD Pizza /////\n\nexport var addPizza = function addPizza(formValues) {\n  console.log(formValues, \"formValues\");\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(dispatch, getState) {\n        var state, updatedItems, addedItem;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                state = getState();\n                updatedItems = state.items;\n                addedItem = [{\n                  id: Math.floor(Math.random() * (999 - 100 + 1) + 100),\n                  activeDiscount: \"\",\n                  discount: 5,\n                  title: formValues[\"name\"],\n                  desc: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.\",\n                  price: formValues[\"price\"],\n                  img: formValues[\"img\"],\n                  dep: formValues[\"type\"]\n                }]; //check if the action id exists in the addedItems\n                // updatedItems = state.items.concat(addedItem);\n\n                updatedItems = addedItem.concat(state.items);\n                console.log(updatedItems, \"updateditems\");\n                dispatch({\n                  type: ADD_PIZZA,\n                  items: updatedItems\n                });\n\n              case 6:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      return function (_x11, _x12) {\n        return _ref6.apply(this, arguments);\n      };\n    }()\n  );\n}; //subtract qt action\n\nexport var addQuantity = function addQuantity(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref7 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(dispatch, getState) {\n        var state, addedItem, priceAfterDiscount, newTotal;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                state = getState();\n                addedItem = state.items.find(function (item) {\n                  return item.id === id;\n                });\n                addedItem.quantity += 1;\n                priceAfterDiscount = addedItem.price;\n\n                if (addedItem.activeDiscount) {\n                  priceAfterDiscount = addedItem.price - addedItem.price * addedItem.discount / 100;\n                }\n\n                newTotal = state.total + priceAfterDiscount;\n                dispatch({\n                  type: ADD_QUANTITY,\n                  newTotal: newTotal\n                });\n\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      return function (_x13, _x14) {\n        return _ref7.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["D:\\projects\\react\\tasks\\pizza\\src\\components\\actions\\cartActions.js"],"names":["ADD_PIZZA","DELETE_PIZZA","EDIT_PIZZA","ADD_QUANTITY","CHANGE_FILTER","ON_INIT_FUNCTION","initFunction","dispatch","getState","type","changeFilter","value","selectedValue","state","filteredProducts","length","items","filter","each","title","includes","dep","removeItem","id","itemToRemove","addedItems","find","item","new_items","priceAfterDiscount","price","activeDiscount","discount","newTotal","total","quantity","REMOVE_ITEM","deletePizza","console","log","editPizza","formValues","index","findIndex","name","img","addPizza","updatedItems","addedItem","Math","floor","random","desc","concat","addQuantity"],"mappings":"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","sourcesContent":["import {\r\n  ADD_PIZZA,\r\n  DELETE_PIZZA,\r\n  EDIT_PIZZA,\r\n  ADD_QUANTITY,\r\n  CHANGE_FILTER,\r\n  ON_INIT_FUNCTION,\r\n} from \"./action-types/cart-actions\";\r\n\r\n//add cart action\r\nexport const initFunction = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({\r\n      type: ON_INIT_FUNCTION,\r\n    });\r\n  };\r\n};\r\nexport const changeFilter = (value, selectedValue) => {\r\n  return async (dispatch, getState) => {\r\n    const state = getState();\r\n    let filteredProducts = [];\r\n\r\n    if (value.length > 0 || selectedValue.length > 0) {\r\n      filteredProducts = state.items.filter((each) => {\r\n        if (selectedValue !== \"select_Department\") {\r\n          return each.title.includes(value) && each.dep.includes(selectedValue);\r\n        } else {\r\n          return each.title.includes(value);\r\n        }\r\n      });\r\n    } else {\r\n      filteredProducts = state.items;\r\n    }\r\n\r\n    dispatch({\r\n      type: CHANGE_FILTER,\r\n      filteredProducts,\r\n    });\r\n  };\r\n};\r\nexport const removeItem = (id) => {\r\n  return async (dispatch, getState) => {\r\n    const state = getState();\r\n    let itemToRemove = state.addedItems.find((item) => id === item.id);\r\n    let new_items = state.addedItems.filter((item) => id !== item.id);\r\n    let priceAfterDiscount = itemToRemove.price;\r\n    if (itemToRemove.activeDiscount) {\r\n      priceAfterDiscount =\r\n        itemToRemove.price - (itemToRemove.price * itemToRemove.discount) / 100;\r\n    }\r\n    //calculating the total\r\n    let newTotal = state.total - priceAfterDiscount * itemToRemove.quantity;\r\n\r\n    dispatch({\r\n      type: REMOVE_ITEM,\r\n      addedItems: new_items,\r\n      total: newTotal,\r\n    });\r\n  };\r\n};\r\n/////////////delete item (pizza)///////\r\nexport const deletePizza = (id) => {\r\n  return async (dispatch, getState) => {\r\n    const state = getState();\r\n    console.log(id, \"iddd\");\r\n    let new_items = state.items.filter((item) => id !== item.id);\r\n    console.log(new_items, \"new items\");\r\n    dispatch({\r\n      type: DELETE_PIZZA,\r\n      items: new_items,\r\n    });\r\n  };\r\n};\r\n////// edit pizza /////\r\n\r\nexport const editPizza = (formValues) => {\r\n  console.log(formValues, \"we are here in edit\");\r\n\r\n  return async (dispatch, getState) => {\r\n    const state = getState();\r\n\r\n    const index = state.items.findIndex((item) => item.id == formValues.id);\r\n    let items = [...state.items]; // important to create a copy, otherwise you'll modify state outside of setState call\r\n    items[index] = {\r\n      ...items[index],\r\n      title: formValues.name,\r\n      price: formValues.price,\r\n      dep: formValues.type,\r\n      img: formValues.img,\r\n    };\r\n    dispatch({\r\n      type: EDIT_PIZZA,\r\n      items: items,\r\n    });\r\n  };\r\n};\r\n////// ADD Pizza /////\r\nexport const addPizza = (formValues) => {\r\n  console.log(formValues, \"formValues\");\r\n  return async (dispatch, getState) => {\r\n    const state = getState();\r\n    let updatedItems = state.items;\r\n    let addedItem = [\r\n      {\r\n        id: Math.floor(Math.random() * (999 - 100 + 1) + 100),\r\n        activeDiscount: \"\",\r\n        discount: 5,\r\n        title: formValues[\"name\"],\r\n        desc:\r\n          \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.\",\r\n        price: formValues[\"price\"],\r\n        img: formValues[\"img\"],\r\n        dep: formValues[\"type\"],\r\n      },\r\n    ];\r\n    //check if the action id exists in the addedItems\r\n    // updatedItems = state.items.concat(addedItem);\r\n    updatedItems = addedItem.concat(state.items);\r\n    console.log(updatedItems, \"updateditems\");\r\n    dispatch({\r\n      type: ADD_PIZZA,\r\n      items: updatedItems,\r\n    });\r\n  };\r\n};\r\n\r\n//subtract qt action\r\nexport const addQuantity = (id) => {\r\n  return async (dispatch, getState) => {\r\n    const state = getState();\r\n    let addedItem = state.items.find((item) => item.id === id);\r\n    addedItem.quantity += 1;\r\n    let priceAfterDiscount = addedItem.price;\r\n    if (addedItem.activeDiscount) {\r\n      priceAfterDiscount =\r\n        addedItem.price - (addedItem.price * addedItem.discount) / 100;\r\n    }\r\n    let newTotal = state.total + priceAfterDiscount;\r\n    dispatch({ type: ADD_QUANTITY, newTotal: newTotal });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}