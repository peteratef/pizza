{"ast":null,"code":"import _toConsumableArray from \"D:\\\\projects\\\\react\\\\React-Shopping-Cart\\\\Shopping-Cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\projects\\\\react\\\\React-Shopping-Cart\\\\Shopping-Cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\projects\\\\react\\\\React-Shopping-Cart\\\\Shopping-Cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\projects\\\\react\\\\React-Shopping-Cart\\\\Shopping-Cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\projects\\\\react\\\\React-Shopping-Cart\\\\Shopping-Cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\projects\\\\react\\\\React-Shopping-Cart\\\\Shopping-Cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\projects\\\\react\\\\React-Shopping-Cart\\\\Shopping-Cart\\\\src\\\\components\\\\Pagination.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nvar propTypes = {\n  items: PropTypes.array.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  initialPage: PropTypes.number,\n  pageSize: PropTypes.number\n};\nvar defaultProps = {\n  initialPage: 1,\n  pageSize: 4\n};\n\nvar Pagination =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Pagination, _React$Component);\n\n  function Pagination(props) {\n    var _this;\n\n    _classCallCheck(this, Pagination);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pagination).call(this, props));\n    _this.state = {\n      pager: {}\n    };\n    return _this;\n  }\n\n  _createClass(Pagination, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      // set page if items array isn't empty\n      if (this.props.items && this.props.items.length) {\n        this.setPage(this.props.initialPage);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      // reset page if items array has changed\n      if (this.props.items !== prevProps.items) {\n        this.setPage(this.props.initialPage);\n      }\n    }\n  }, {\n    key: \"setPage\",\n    value: function setPage(page) {\n      // console.log(\"we are here \");\n      console.log(page, \"page\");\n      console.log(this.props.items, \"items\");\n      var _this$props = this.props,\n          items = _this$props.items,\n          pageSize = _this$props.pageSize;\n      var pager = this.state.pager;\n      console.log(page, \"pagge\"); // if (page < 1 || page > pager.totalPages) {\n      //   console.log(\"this return nothing\");\n      //   return;\n      // }\n      // get new pager object for specified page\n\n      pager = this.getPager(items.length, page, pageSize); // get new page of items from items array\n\n      var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\n      console.log(pageOfItems, \"pageOfItems\"); // update state\n\n      this.setState({\n        pager: pager\n      }); // call change page function in parent component\n\n      this.props.onChangePage(pageOfItems);\n    }\n  }, {\n    key: \"getPager\",\n    value: function getPager(totalItems, currentPage, pageSize) {\n      // default to first page\n      currentPage = currentPage || 1; // default page size is 10\n\n      pageSize = pageSize || 10; // calculate total pages\n\n      var totalPages = Math.ceil(totalItems / pageSize);\n      var startPage, endPage;\n\n      if (totalPages <= 10) {\n        // less than 10 total pages so show all\n        startPage = 1;\n        endPage = totalPages;\n      } else {\n        // more than 10 total pages so calculate start and end pages\n        if (currentPage <= 6) {\n          startPage = 1;\n          endPage = 10;\n        } else if (currentPage + 4 >= totalPages) {\n          startPage = totalPages - 9;\n          endPage = totalPages;\n        } else {\n          startPage = currentPage - 5;\n          endPage = currentPage + 4;\n        }\n      } // calculate start and end item indexes\n\n\n      var startIndex = (currentPage - 1) * pageSize;\n      var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1); // create an array of pages to ng-repeat in the pager control\n\n      var pages = _toConsumableArray(Array(endPage + 1 - startPage).keys()).map(function (i) {\n        return startPage + i;\n      }); // return object with all pager properties required by the view\n\n\n      return {\n        totalItems: totalItems,\n        currentPage: currentPage,\n        pageSize: pageSize,\n        totalPages: totalPages,\n        startPage: startPage,\n        endPage: endPage,\n        startIndex: startIndex,\n        endIndex: endIndex,\n        pages: pages\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var pager = this.state.pager;\n\n      if (!pager.pages || pager.pages.length <= 1) {\n        // don't display pager if there is only 1 page\n        return null;\n      }\n\n      return React.createElement(\"ul\", {\n        className: \"pagination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: pager.currentPage === 1 ? \"disabled\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.setPage(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"First\")), React.createElement(\"li\", {\n        className: pager.currentPage === 1 ? \"disabled\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.setPage(pager.currentPage - 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Previous\")), pager.pages.map(function (page, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          className: pager.currentPage === page ? \"active\" : \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          onClick: function onClick() {\n            return _this2.setPage(page);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, page));\n      }), React.createElement(\"li\", {\n        className: pager.currentPage === pager.totalPages ? \"disabled\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.setPage(pager.currentPage + 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Next\")), React.createElement(\"li\", {\n        className: pager.currentPage === pager.totalPages ? \"disabled\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.setPage(pager.totalPages);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Last\")));\n    }\n  }]);\n\n  return Pagination;\n}(React.Component);\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\nexport default Pagination;","map":{"version":3,"sources":["D:\\projects\\react\\React-Shopping-Cart\\Shopping-Cart\\src\\components\\Pagination.js"],"names":["React","PropTypes","propTypes","items","array","isRequired","onChangePage","func","initialPage","number","pageSize","defaultProps","Pagination","props","state","pager","length","setPage","prevProps","prevState","page","console","log","getPager","pageOfItems","slice","startIndex","endIndex","setState","totalItems","currentPage","totalPages","Math","ceil","startPage","endPage","min","pages","Array","keys","map","i","index","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  initialPage: PropTypes.number,\r\n  pageSize: PropTypes.number,\r\n};\r\n\r\nconst defaultProps = {\r\n  initialPage: 1,\r\n  pageSize: 4,\r\n};\r\n\r\nclass Pagination extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { pager: {} };\r\n  }\r\n\r\n  componentWillMount() {\r\n    // set page if items array isn't empty\r\n    if (this.props.items && this.props.items.length) {\r\n      this.setPage(this.props.initialPage);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // reset page if items array has changed\r\n    if (this.props.items !== prevProps.items) {\r\n      this.setPage(this.props.initialPage);\r\n    }\r\n  }\r\n\r\n  setPage(page) {\r\n    // console.log(\"we are here \");\r\n    console.log(page, \"page\");\r\n    console.log(this.props.items, \"items\");\r\n    var { items, pageSize } = this.props;\r\n\r\n    var pager = this.state.pager;\r\n    console.log(page, \"pagge\");\r\n    // if (page < 1 || page > pager.totalPages) {\r\n    //   console.log(\"this return nothing\");\r\n    //   return;\r\n    // }\r\n\r\n    // get new pager object for specified page\r\n    pager = this.getPager(items.length, page, pageSize);\r\n\r\n    // get new page of items from items array\r\n    var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\r\n    console.log(pageOfItems, \"pageOfItems\");\r\n    // update state\r\n    this.setState({ pager: pager });\r\n\r\n    // call change page function in parent component\r\n    this.props.onChangePage(pageOfItems);\r\n  }\r\n\r\n  getPager(totalItems, currentPage, pageSize) {\r\n    // default to first page\r\n    currentPage = currentPage || 1;\r\n\r\n    // default page size is 10\r\n    pageSize = pageSize || 10;\r\n\r\n    // calculate total pages\r\n    var totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n    var startPage, endPage;\r\n    if (totalPages <= 10) {\r\n      // less than 10 total pages so show all\r\n      startPage = 1;\r\n      endPage = totalPages;\r\n    } else {\r\n      // more than 10 total pages so calculate start and end pages\r\n      if (currentPage <= 6) {\r\n        startPage = 1;\r\n        endPage = 10;\r\n      } else if (currentPage + 4 >= totalPages) {\r\n        startPage = totalPages - 9;\r\n        endPage = totalPages;\r\n      } else {\r\n        startPage = currentPage - 5;\r\n        endPage = currentPage + 4;\r\n      }\r\n    }\r\n\r\n    // calculate start and end item indexes\r\n    var startIndex = (currentPage - 1) * pageSize;\r\n    var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n    // create an array of pages to ng-repeat in the pager control\r\n    var pages = [...Array(endPage + 1 - startPage).keys()].map(\r\n      (i) => startPage + i\r\n    );\r\n\r\n    // return object with all pager properties required by the view\r\n    return {\r\n      totalItems: totalItems,\r\n      currentPage: currentPage,\r\n      pageSize: pageSize,\r\n      totalPages: totalPages,\r\n      startPage: startPage,\r\n      endPage: endPage,\r\n      startIndex: startIndex,\r\n      endIndex: endIndex,\r\n      pages: pages,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    var pager = this.state.pager;\r\n\r\n    if (!pager.pages || pager.pages.length <= 1) {\r\n      // don't display pager if there is only 1 page\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <ul className=\"pagination\">\r\n        <li className={pager.currentPage === 1 ? \"disabled\" : \"\"}>\r\n          <a onClick={() => this.setPage(1)}>First</a>\r\n        </li>\r\n        <li className={pager.currentPage === 1 ? \"disabled\" : \"\"}>\r\n          <a onClick={() => this.setPage(pager.currentPage - 1)}>Previous</a>\r\n        </li>\r\n        {pager.pages.map((page, index) => (\r\n          <li\r\n            key={index}\r\n            className={pager.currentPage === page ? \"active\" : \"\"}\r\n          >\r\n            <a onClick={() => this.setPage(page)}>{page}</a>\r\n          </li>\r\n        ))}\r\n        <li\r\n          className={pager.currentPage === pager.totalPages ? \"disabled\" : \"\"}\r\n        >\r\n          <a onClick={() => this.setPage(pager.currentPage + 1)}>Next</a>\r\n        </li>\r\n        <li\r\n          className={pager.currentPage === pager.totalPages ? \"disabled\" : \"\"}\r\n        >\r\n          <a onClick={() => this.setPage(pager.totalPages)}>Last</a>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nPagination.propTypes = propTypes;\r\nPagination.defaultProps = defaultProps;\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}