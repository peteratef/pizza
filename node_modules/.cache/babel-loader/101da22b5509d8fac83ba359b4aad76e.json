{"ast":null,"code":"import _toConsumableArray from \"D:\\\\projects\\\\react\\\\tasks\\\\pizza\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"D:\\\\projects\\\\react\\\\tasks\\\\pizza\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"D:\\\\projects\\\\react\\\\tasks\\\\pizza\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\projects\\\\react\\\\tasks\\\\pizza\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport uuid from \"react-uuid\";\nimport { ADD_TO_CART, ADD_PIZZA, REMOVE_ITEM, SUB_QUANTITY, ADD_QUANTITY, // ADD_SHIPPING,\nCHANGE_FILTER, ON_INIT_FUNCTION } from \"./action-types/cart-actions\"; //add cart action\n\nexport var initFunction = function initFunction() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch({\n                  type: ON_INIT_FUNCTION\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var changeFilter = function changeFilter(value, selectedValue) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n        var state, filteredProducts;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                state = getState();\n                filteredProducts = [];\n\n                if (value.length > 0 || selectedValue.length > 0) {\n                  filteredProducts = state.items.filter(function (each) {\n                    if (selectedValue !== \"select_Department\") {\n                      return each.title.includes(value) && each.dep.includes(selectedValue);\n                    } else {\n                      return each.title.includes(value);\n                    }\n                  });\n                } else {\n                  filteredProducts = state.items;\n                }\n\n                dispatch({\n                  type: CHANGE_FILTER,\n                  filteredProducts: filteredProducts\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n}; ////// ADD Pizza /////\n\nexport var addPizza = function addPizza(formValues) {\n  console.log(formValues, \"formValues\");\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch, getState) {\n        var state, updatedItems, addedItem;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                state = getState();\n                updatedItems = state.items;\n                addedItem = {\n                  id: uuid(),\n                  activeDiscount: \"\",\n                  discount: 5,\n                  title: formValues[\"name\"],\n                  desc: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.\",\n                  price: formValues[\"price\"],\n                  img: \"\",\n                  dep: formValues[\"type\"]\n                }; //check if the action id exists in the addedItems\n\n                updatedItems = state.items.concat(addedItem);\n                console.log(updatedItems, \"updateditems\");\n                dispatch({\n                  type: ADD_PIZZA,\n                  items: updatedItems\n                });\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x5, _x6) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var addToCart = function addToCart(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch, getState) {\n        var state, addedItem, existed_item, priceAfterDiscount, newTotal;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                state = getState();\n                addedItem = state.items.find(function (item) {\n                  return item.id === id;\n                }); //check if the action id exists in the addedItems\n\n                existed_item = state.addedItems.find(function (item) {\n                  return id === item.id;\n                });\n                priceAfterDiscount = addedItem.price;\n\n                if (addedItem.activeDiscount) {\n                  priceAfterDiscount = addedItem.price - addedItem.price * addedItem.discount / 100;\n                }\n\n                if (existed_item) {\n                  addedItem.quantity += 1;\n                  dispatch(_objectSpread({\n                    type: ADD_TO_CART\n                  }, state, {\n                    total: state.total + priceAfterDiscount\n                  }));\n                } else {\n                  addedItem.quantity = 1;\n                  newTotal = state.total + priceAfterDiscount;\n                  dispatch({\n                    type: ADD_TO_CART,\n                    addedItems: _toConsumableArray(state.addedItems).concat([addedItem]),\n                    total: newTotal\n                  });\n                }\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function (_x7, _x8) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n}; //remove item action\n\nexport var removeItem = function removeItem(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch, getState) {\n        var state, itemToRemove, new_items, priceAfterDiscount, newTotal;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                state = getState();\n                itemToRemove = state.addedItems.find(function (item) {\n                  return id === item.id;\n                });\n                new_items = state.addedItems.filter(function (item) {\n                  return id !== item.id;\n                });\n                priceAfterDiscount = itemToRemove.price;\n\n                if (itemToRemove.activeDiscount) {\n                  priceAfterDiscount = itemToRemove.price - itemToRemove.price * itemToRemove.discount / 100;\n                } //calculating the total\n\n\n                newTotal = state.total - priceAfterDiscount * itemToRemove.quantity;\n                dispatch({\n                  type: REMOVE_ITEM,\n                  addedItems: new_items,\n                  total: newTotal\n                });\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function (_x9, _x10) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n}; //subtract qt action\n\nexport var subtractQuantity = function subtractQuantity(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(dispatch, getState) {\n        var state, new_items, newTotal, addedItem, priceAfterDiscount;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                state = getState();\n                new_items = [];\n                newTotal = 0;\n                addedItem = state.items.find(function (item) {\n                  return item.id === id;\n                }); //if the qt == 0 then it should be removed\n\n                priceAfterDiscount = addedItem.price;\n\n                if (addedItem.activeDiscount) {\n                  priceAfterDiscount = addedItem.price - addedItem.price * addedItem.discount / 100;\n                }\n\n                if (addedItem.quantity === 1) {\n                  new_items = state.addedItems.filter(function (item) {\n                    return item.id !== id;\n                  });\n                  newTotal = state.total - priceAfterDiscount;\n                } else {\n                  addedItem.quantity -= 1;\n                  new_items = state.addedItems;\n                  newTotal = state.total - priceAfterDiscount;\n                }\n\n                dispatch(_objectSpread({\n                  type: SUB_QUANTITY\n                }, state, {\n                  addedItems: new_items,\n                  addedtotal: newTotal\n                }));\n\n              case 8:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      return function (_x11, _x12) {\n        return _ref6.apply(this, arguments);\n      };\n    }()\n  );\n}; //add qt action\n\nexport var addQuantity = function addQuantity(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref7 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(dispatch, getState) {\n        var state, addedItem, priceAfterDiscount, newTotal;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                state = getState();\n                addedItem = state.items.find(function (item) {\n                  return item.id === id;\n                });\n                addedItem.quantity += 1;\n                priceAfterDiscount = addedItem.price;\n\n                if (addedItem.activeDiscount) {\n                  priceAfterDiscount = addedItem.price - addedItem.price * addedItem.discount / 100;\n                }\n\n                newTotal = state.total + priceAfterDiscount;\n                dispatch({\n                  type: ADD_QUANTITY,\n                  newTotal: newTotal\n                });\n\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      return function (_x13, _x14) {\n        return _ref7.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["D:\\projects\\react\\tasks\\pizza\\src\\components\\actions\\cartActions.js"],"names":["uuid","ADD_TO_CART","ADD_PIZZA","REMOVE_ITEM","SUB_QUANTITY","ADD_QUANTITY","CHANGE_FILTER","ON_INIT_FUNCTION","initFunction","dispatch","getState","type","changeFilter","value","selectedValue","state","filteredProducts","length","items","filter","each","title","includes","dep","addPizza","formValues","console","log","updatedItems","addedItem","id","activeDiscount","discount","desc","price","img","concat","addToCart","find","item","existed_item","addedItems","priceAfterDiscount","quantity","total","newTotal","removeItem","itemToRemove","new_items","subtractQuantity","addedtotal","addQuantity"],"mappings":"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","sourcesContent":["import uuid from \"react-uuid\";\r\nimport {\r\n  ADD_TO_CART,\r\n  ADD_PIZZA,\r\n  REMOVE_ITEM,\r\n  SUB_QUANTITY,\r\n  ADD_QUANTITY,\r\n  // ADD_SHIPPING,\r\n  CHANGE_FILTER,\r\n  ON_INIT_FUNCTION,\r\n} from \"./action-types/cart-actions\";\r\n\r\n//add cart action\r\nexport const initFunction = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({\r\n      type: ON_INIT_FUNCTION,\r\n    });\r\n  };\r\n};\r\nexport const changeFilter = (value, selectedValue) => {\r\n  return async (dispatch, getState) => {\r\n    const state = getState();\r\n    let filteredProducts = [];\r\n\r\n    if (value.length > 0 || selectedValue.length > 0) {\r\n      filteredProducts = state.items.filter((each) => {\r\n        if (selectedValue !== \"select_Department\") {\r\n          return each.title.includes(value) && each.dep.includes(selectedValue);\r\n        } else {\r\n          return each.title.includes(value);\r\n        }\r\n      });\r\n    } else {\r\n      filteredProducts = state.items;\r\n    }\r\n\r\n    dispatch({\r\n      type: CHANGE_FILTER,\r\n      filteredProducts,\r\n    });\r\n  };\r\n};\r\n\r\n////// ADD Pizza /////\r\nexport const addPizza = (formValues) => {\r\n  console.log(formValues, \"formValues\");\r\n  return async (dispatch, getState) => {\r\n    const state = getState();\r\n    let updatedItems = state.items;\r\n    let addedItem = {\r\n      id: uuid(),\r\n      activeDiscount: \"\",\r\n      discount: 5,\r\n      title: formValues[\"name\"],\r\n      desc:\r\n        \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Minima, ex.\",\r\n      price: formValues[\"price\"],\r\n      img: \"\",\r\n      dep: formValues[\"type\"],\r\n    };\r\n    //check if the action id exists in the addedItems\r\n    updatedItems = state.items.concat(addedItem);\r\n    console.log(updatedItems, \"updateditems\");\r\n    dispatch({\r\n      type: ADD_PIZZA,\r\n      items: updatedItems,\r\n    });\r\n  };\r\n};\r\n\r\nexport const addToCart = (id) => {\r\n  return async (dispatch, getState) => {\r\n    const state = getState();\r\n\r\n    let addedItem = state.items.find((item) => item.id === id);\r\n    //check if the action id exists in the addedItems\r\n    let existed_item = state.addedItems.find((item) => id === item.id);\r\n    let priceAfterDiscount = addedItem.price;\r\n    if (addedItem.activeDiscount) {\r\n      priceAfterDiscount =\r\n        addedItem.price - (addedItem.price * addedItem.discount) / 100;\r\n    }\r\n    if (existed_item) {\r\n      addedItem.quantity += 1;\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        ...state,\r\n        total: state.total + priceAfterDiscount,\r\n      });\r\n    } else {\r\n      addedItem.quantity = 1;\r\n      let newTotal = state.total + priceAfterDiscount;\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        addedItems: [...state.addedItems, addedItem],\r\n        total: newTotal,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n//remove item action\r\nexport const removeItem = (id) => {\r\n  return async (dispatch, getState) => {\r\n    const state = getState();\r\n    let itemToRemove = state.addedItems.find((item) => id === item.id);\r\n    let new_items = state.addedItems.filter((item) => id !== item.id);\r\n    let priceAfterDiscount = itemToRemove.price;\r\n    if (itemToRemove.activeDiscount) {\r\n      priceAfterDiscount =\r\n        itemToRemove.price - (itemToRemove.price * itemToRemove.discount) / 100;\r\n    }\r\n    //calculating the total\r\n    let newTotal = state.total - priceAfterDiscount * itemToRemove.quantity;\r\n\r\n    dispatch({\r\n      type: REMOVE_ITEM,\r\n      addedItems: new_items,\r\n      total: newTotal,\r\n    });\r\n  };\r\n};\r\n//subtract qt action\r\nexport const subtractQuantity = (id) => {\r\n  return async (dispatch, getState) => {\r\n    const state = getState();\r\n    let new_items = [];\r\n    let newTotal = 0;\r\n    let addedItem = state.items.find((item) => item.id === id);\r\n    //if the qt == 0 then it should be removed\r\n    let priceAfterDiscount = addedItem.price;\r\n    if (addedItem.activeDiscount) {\r\n      priceAfterDiscount =\r\n        addedItem.price - (addedItem.price * addedItem.discount) / 100;\r\n    }\r\n    if (addedItem.quantity === 1) {\r\n      new_items = state.addedItems.filter((item) => item.id !== id);\r\n\r\n      newTotal = state.total - priceAfterDiscount;\r\n    } else {\r\n      addedItem.quantity -= 1;\r\n      new_items = state.addedItems;\r\n      newTotal = state.total - priceAfterDiscount;\r\n    }\r\n    dispatch({\r\n      type: SUB_QUANTITY,\r\n      ...state,\r\n      addedItems: new_items,\r\n      addedtotal: newTotal,\r\n    });\r\n  };\r\n};\r\n//add qt action\r\nexport const addQuantity = (id) => {\r\n  return async (dispatch, getState) => {\r\n    const state = getState();\r\n    let addedItem = state.items.find((item) => item.id === id);\r\n    addedItem.quantity += 1;\r\n    let priceAfterDiscount = addedItem.price;\r\n    if (addedItem.activeDiscount) {\r\n      priceAfterDiscount =\r\n        addedItem.price - (addedItem.price * addedItem.discount) / 100;\r\n    }\r\n    let newTotal = state.total + priceAfterDiscount;\r\n    dispatch({ type: ADD_QUANTITY, newTotal: newTotal });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}